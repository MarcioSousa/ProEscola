// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProEscola.Data;

namespace ProEscola.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("ProEscola.Models.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("DataNasc")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Escolaridade")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("AlunoId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("ProEscola.Models.Aprazo", b =>
                {
                    b.Property<int>("AprazoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DtVencimento")
                        .HasColumnType("longtext");

                    b.Property<int?>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int>("QtdeMensalidade")
                        .HasColumnType("int");

                    b.Property<double>("TaxaJuros")
                        .HasColumnType("double");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("AprazoId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Aprazos");
                });

            modelBuilder.Entity("ProEscola.Models.Avista", b =>
                {
                    b.Property<int>("AvistaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Agencia")
                        .HasColumnType("int");

                    b.Property<int?>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int>("NCheque")
                        .HasColumnType("int");

                    b.Property<string>("PreData")
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("AvistaId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("Avistas");
                });

            modelBuilder.Entity("ProEscola.Models.Curso", b =>
                {
                    b.Property<int>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("int");

                    b.Property<string>("DataVigencia")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Programa")
                        .HasColumnType("longtext");

                    b.Property<string>("Sigla")
                        .HasColumnType("longtext");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.Property<double>("ValorHoraInstrutor")
                        .HasColumnType("double");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("ProEscola.Models.Instrutor", b =>
                {
                    b.Property<int>("InstrutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AreaAtuacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("DataNasc")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("longtext");

                    b.Property<string>("Formacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rg")
                        .HasColumnType("longtext");

                    b.Property<string>("Sexo")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("InstrutorId");

                    b.ToTable("Instrutores");
                });

            modelBuilder.Entity("ProEscola.Models.Matricula", b =>
                {
                    b.Property<int>("MatriculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("longtext");

                    b.Property<double>("Nota")
                        .HasColumnType("double");

                    b.Property<int>("QtdeFaltas")
                        .HasColumnType("int");

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("MatriculaId");

                    b.HasIndex("AlunoId")
                        .IsUnique();

                    b.HasIndex("TurmaId");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("ProEscola.Models.Turma", b =>
                {
                    b.Property<int>("TurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("DataInicio")
                        .HasColumnType("longtext");

                    b.Property<string>("DataTermino")
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<int?>("InstrutorId")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnType("longtext");

                    b.Property<string>("Periodo")
                        .HasColumnType("longtext");

                    b.Property<int>("QtdeVagas")
                        .HasColumnType("int");

                    b.Property<string>("SiglaTurma")
                        .HasColumnType("longtext");

                    b.HasKey("TurmaId");

                    b.HasIndex("CursoId");

                    b.HasIndex("InstrutorId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("ProEscola.Models.Aprazo", b =>
                {
                    b.HasOne("ProEscola.Models.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("ProEscola.Models.Avista", b =>
                {
                    b.HasOne("ProEscola.Models.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("ProEscola.Models.Matricula", b =>
                {
                    b.HasOne("ProEscola.Models.Aluno", "Aluno")
                        .WithOne("Matricula")
                        .HasForeignKey("ProEscola.Models.Matricula", "AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProEscola.Models.Turma", "Turma")
                        .WithMany("Matriculas")
                        .HasForeignKey("TurmaId");

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("ProEscola.Models.Turma", b =>
                {
                    b.HasOne("ProEscola.Models.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId");

                    b.HasOne("ProEscola.Models.Instrutor", "Instrutor")
                        .WithMany("Turmas")
                        .HasForeignKey("InstrutorId");

                    b.Navigation("Curso");

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("ProEscola.Models.Aluno", b =>
                {
                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("ProEscola.Models.Curso", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("ProEscola.Models.Instrutor", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("ProEscola.Models.Turma", b =>
                {
                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
